apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubenews-db-deployment
spec:
  selector:
    matchLabels:
      app: postegresdb
  template:
    metadata:
      labels: 
        app: postegresdb
    spec:
      containers:
        - name: postegres
          image: postgres:14.3-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: kubedevnews
            - name: POSTGRES_USER
              value: kubedevnews
            - name: POSTGRES_PASSWORD
              value: Pg#123

---

apiVersion: v1
kind: Service
metadata:
  name: kubenewsdb-service
spec:
  selector:
    app: postegresdb
  ports:
    - port: 5432
      targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubenews-app-deployment
spec:
  selector:
    matchLabels:
      app: kubenews-app
  template:
    metadata:
      labels: 
        app: kubenews-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"

    spec:
      containers:
      - name: kubenews-app
        image: izabelrodrigues/kube-news:v1
        env:
        - name: DB_DATABASE
          value: "kubedevnews"
        - name: DB_USERNAME
          value: "kubedevnews"
        - name: DB_PASSWORD
          value: "Pg#123"
        - name: DB_HOST
          value: "kubenewsdb-service" # mesmo nome do service do banco de dados

---

apiVersion: v1
kind: Service
metadata:
  name: kubenews-app-service
spec:
  selector:
    app: kubenews-app
  ports:
    - port: 80
      targetPort: 8080
      nodePort: 30001
  #type: NodePort
  type: LoadBalancer #( Para usar com a digital ocean )
